{"version":3,"file":"component---src-pages-project-jsx-5b045bc6472004995c44.js","mappings":"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","sources":["webpack://my-gatsby-site/./node_modules/react-masonry-css/dist/react-masonry-css.module.js","webpack://my-gatsby-site/./src/pages/project.jsx"],"sourcesContent":["import React from 'react';\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nconst defaultProps = {\n  breakpointCols: undefined,\n  // optional, number or object { default: number, [key: number]: number }\n  className: undefined,\n  // required, string\n  columnClassName: undefined,\n  // optional, string\n  // Any React children. Typically an array of JSX items\n  children: undefined,\n  // Custom attributes, however it is advised against\n  // using these to prevent unintended issues and future conflicts\n  // ...any other attribute, will be added to the container\n  columnAttrs: undefined,\n  // object, added to the columns\n  // Deprecated props\n  // The column property is deprecated.\n  // It is an alias of the `columnAttrs` property\n  column: undefined\n};\nconst DEFAULT_COLUMNS = 2;\n\nclass Masonry extends React.Component {\n  constructor(props) {\n    super(props); // Correct scope for when methods are accessed externally\n\n    this.reCalculateColumnCount = this.reCalculateColumnCount.bind(this);\n    this.reCalculateColumnCountDebounce = this.reCalculateColumnCountDebounce.bind(this); // default state\n\n    let columnCount;\n\n    if (this.props.breakpointCols && this.props.breakpointCols.default) {\n      columnCount = this.props.breakpointCols.default;\n    } else {\n      columnCount = parseInt(this.props.breakpointCols) || DEFAULT_COLUMNS;\n    }\n\n    this.state = {\n      columnCount\n    };\n  }\n\n  componentDidMount() {\n    this.reCalculateColumnCount(); // window may not be available in some environments\n\n    if (window) {\n      window.addEventListener('resize', this.reCalculateColumnCountDebounce);\n    }\n  }\n\n  componentDidUpdate() {\n    this.reCalculateColumnCount();\n  }\n\n  componentWillUnmount() {\n    if (window) {\n      window.removeEventListener('resize', this.reCalculateColumnCountDebounce);\n    }\n  }\n\n  reCalculateColumnCountDebounce() {\n    if (!window || !window.requestAnimationFrame) {\n      // IE10+\n      this.reCalculateColumnCount();\n      return;\n    }\n\n    if (window.cancelAnimationFrame) {\n      // IE10+\n      window.cancelAnimationFrame(this._lastRecalculateAnimationFrame);\n    }\n\n    this._lastRecalculateAnimationFrame = window.requestAnimationFrame(() => {\n      this.reCalculateColumnCount();\n    });\n  }\n\n  reCalculateColumnCount() {\n    const windowWidth = window && window.innerWidth || Infinity;\n    let breakpointColsObject = this.props.breakpointCols; // Allow passing a single number to `breakpointCols` instead of an object\n\n    if (typeof breakpointColsObject !== 'object') {\n      breakpointColsObject = {\n        default: parseInt(breakpointColsObject) || DEFAULT_COLUMNS\n      };\n    }\n\n    let matchedBreakpoint = Infinity;\n    let columns = breakpointColsObject.default || DEFAULT_COLUMNS;\n\n    for (let breakpoint in breakpointColsObject) {\n      const optBreakpoint = parseInt(breakpoint);\n      const isCurrentBreakpoint = optBreakpoint > 0 && windowWidth <= optBreakpoint;\n\n      if (isCurrentBreakpoint && optBreakpoint < matchedBreakpoint) {\n        matchedBreakpoint = optBreakpoint;\n        columns = breakpointColsObject[breakpoint];\n      }\n    }\n\n    columns = Math.max(1, parseInt(columns) || 1);\n\n    if (this.state.columnCount !== columns) {\n      this.setState({\n        columnCount: columns\n      });\n    }\n  }\n\n  itemsInColumns() {\n    const currentColumnCount = this.state.columnCount;\n    const itemsInColumns = new Array(currentColumnCount); // Force children to be handled as an array\n\n    const items = React.Children.toArray(this.props.children);\n\n    for (let i = 0; i < items.length; i++) {\n      const columnIndex = i % currentColumnCount;\n\n      if (!itemsInColumns[columnIndex]) {\n        itemsInColumns[columnIndex] = [];\n      }\n\n      itemsInColumns[columnIndex].push(items[i]);\n    }\n\n    return itemsInColumns;\n  }\n\n  renderColumns() {\n    const {\n      column,\n      columnAttrs = {},\n      columnClassName\n    } = this.props;\n    const childrenInColumns = this.itemsInColumns();\n    const columnWidth = `${100 / childrenInColumns.length}%`;\n    let className = columnClassName;\n\n    if (className && typeof className !== 'string') {\n      this.logDeprecated('The property \"columnClassName\" requires a string'); // This is a deprecated default and will be removed soon.\n\n      if (typeof className === 'undefined') {\n        className = 'my-masonry-grid_column';\n      }\n    }\n\n    const columnAttributes = _objectSpread(_objectSpread(_objectSpread({}, column), columnAttrs), {}, {\n      style: _objectSpread(_objectSpread({}, columnAttrs.style), {}, {\n        width: columnWidth\n      }),\n      className\n    });\n\n    return childrenInColumns.map((items, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", _extends({}, columnAttributes, {\n        key: i\n      }), items);\n    });\n  }\n\n  logDeprecated(message) {\n    console.error('[Masonry]', message);\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      // ignored\n      children,\n      breakpointCols,\n      columnClassName,\n      columnAttrs,\n      column,\n      // used\n      className\n    } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"breakpointCols\", \"columnClassName\", \"columnAttrs\", \"column\", \"className\"]);\n\n    let classNameOutput = className;\n\n    if (typeof className !== 'string') {\n      this.logDeprecated('The property \"className\" requires a string'); // This is a deprecated default and will be removed soon.\n\n      if (typeof className === 'undefined') {\n        classNameOutput = 'my-masonry-grid';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n      className: classNameOutput\n    }), this.renderColumns());\n  }\n\n}\n\nMasonry.defaultProps = defaultProps;\n\nexport default Masonry;\n","import * as React from \"react\"\r\nimport PageMeta from \"../components/PageMeta\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"./layout\"\r\nimport { Image } from \"antd\"\r\nimport Masonry from \"react-masonry-css\"\r\nimport \"../assets/css/project.scss\"\r\n\r\nconst Project = ({ data }) => {  \r\n\r\n  const breakpointColumnsObj = {\r\n    default: 3,\r\n    1100: 3,\r\n    700: 2,\r\n    500: 1,\r\n  }\r\n\r\n  const handlePreviewChange = (current, prev) => {\r\n    console.log(`current index: ${current}, prev index: ${prev}`)\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <h2 className=\"a11y-hidden\">Project</h2>      \r\n\r\n      <Image.PreviewGroup preview={{ onChange: handlePreviewChange }}>\r\n        <Masonry\r\n          breakpointCols={breakpointColumnsObj}\r\n          className=\"my-masonry-grid\"\r\n          columnClassName=\"my-masonry-grid_column\"\r\n        >\r\n            {data.projectList.edges.map(({ node }) => (\r\n              <div key={node.id}>\r\n                <Image \r\n                  src={node.frontmatter.image.childrenImageSharp[0].gatsbyImageData.images.fallback.src}\r\n                  alt={node.frontmatter.title}\r\n                  preview={{\r\n                    mask: <div><p>{node.frontmatter.title}</p></div>,\r\n                  }}\r\n                />\r\n              </div>\r\n            ))}\r\n          \r\n        </Masonry>\r\n      </Image.PreviewGroup>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Project\r\n\r\nexport const Head = () => <PageMeta title=\"Project\" />\r\n\r\nexport const query = graphql`\r\n  query {\r\n    projectList: allMarkdownRemark(sort: {frontmatter: {date: DESC}}) {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            image {\r\n              childrenImageSharp {\r\n                gatsbyImageData\r\n              }\r\n            }\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_extends","assign","arguments","hasOwnProperty","apply","this","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","defaultProps","breakpointCols","undefined","className","columnClassName","children","columnAttrs","column","Masonry","constructor","props","columnCount","super","reCalculateColumnCount","bind","reCalculateColumnCountDebounce","default","parseInt","state","componentDidMount","window","addEventListener","componentDidUpdate","componentWillUnmount","removeEventListener","requestAnimationFrame","cancelAnimationFrame","_lastRecalculateAnimationFrame","windowWidth","innerWidth","Infinity","breakpointColsObject","matchedBreakpoint","columns","breakpoint","optBreakpoint","Math","max","setState","itemsInColumns","currentColumnCount","Array","items","toArray","columnIndex","renderColumns","childrenInColumns","columnWidth","logDeprecated","columnAttributes","style","width","map","message","console","error","render","_this$props","rest","classNameOutput","_ref","data","React","Layout","Image","PreviewGroup","preview","onChange","handlePreviewChange","current","prev","log","projectList","edges","_ref2","node","id","src","frontmatter","image","childrenImageSharp","gatsbyImageData","images","fallback","alt","title","mask","Head","PageMeta"],"sourceRoot":""}